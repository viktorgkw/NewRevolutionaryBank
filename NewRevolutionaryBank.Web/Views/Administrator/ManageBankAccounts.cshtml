@model List<BankAccountManageViewModel>
@{
	ViewData["Title"] = "Manage Bank Accounts";
}

<div class="text-center">
	<div>
		<h1 class="display-4 text-dark fw-bold py-3">@ViewData["Title"]</h1>
		<hr />
		<br />
	</div>

	@if (Model.Count > 0)
	{
		<div class="d-flex flex-row justify-content-around flex-wrap">
			@foreach (var bankAcc in Model)
			{
				string borderColor = bankAcc.IsClosed ? "border-danger" : "border-dark";

				<div class="border @borderColor rounded p-4 fw-bold m-3">

					<p>@bankAcc.IBAN</p>
					<p>@bankAcc.OwnerUsername</p>
					<p>$@bankAcc.Balance</p>

					<a class="btn btn-info text-white fw-bold"
					   asp-controller="Administrator"
					   asp-action="BankAccountDetails"
					   asp-route-id="@bankAcc.Id">
						Details
					</a>
					@if (bankAcc.IsClosed)
					{
						<a class="btn btn-success fw-bold activate-button"
						   data-id="@bankAcc.Id">
							Activate
						</a>
					}
					else
					{
						<a class="btn btn-success fw-bold deactivate-button"
						   data-id="@bankAcc.Id">
							Deactivate
						</a>
					}
				</div>
			}
		</div>
	}
	else
	{
		<p class="fs-3 fw-bold text-danger">No bank accounts!</p>

		<img src="~/gifs/empty.gif" class="website-gif" />
	}
</div>

<!-- Modal -->
<div class="modal fade"
	 id="exampleModal"
	 tabindex="-1"
	 aria-labelledby="exampleModalLabel"
	 aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title"
					id="exampleModalLabel">
					Bank Account Status Change
				</h5>
				<button type="button"
						class="btn-close"
						data-bs-dismiss="modal"
						aria-label="Close"></button>
			</div>
			<div class="modal-body text-danger">
				Dynamic!
			</div>
			<div class="modal-footer">
				<button type="button"
						class="btn btn-secondary"
						data-bs-dismiss="modal">
					No
				</button>
				<button type="button"
						class="btn btn-danger yes-button">
					Yes
				</button>
			</div>
		</div>
	</div>
</div>

<script>
	const modal = document.getElementById('exampleModal');

	const activateButtons = document.querySelectorAll('.activate-button');
	const deactivateButtons = document.querySelectorAll('.deactivate-button');

	activateButtons.forEach(button => {
		button.addEventListener('click', function (event) {
			event.preventDefault();

			const id = this.dataset.id;
			const url = '@Url.Action("ActivateBankAccount", "Administrator")' + '?id=' + id;

			const modalInstance = new bootstrap.Modal(modal);
			modalInstance.show();

			const modalBody = modal.querySelector('.modal-body');
			modalBody.textContent = "Are you sure you want to activate this bank account?";

			modal.querySelector('.modal-footer')
				.addEventListener('click', function (event) {
					if (event.target.classList.contains('btn-danger')) {
						window.location.href = url;
					}
				});
		});
	});

	deactivateButtons.forEach(button => {
		button.addEventListener('click', function (event) {
			event.preventDefault();

			const id = this.dataset.id;
			const url = '@Url.Action("DeactivateBankAccount", "Administrator")' + '?id=' + id;

			const modalInstance = new bootstrap.Modal(modal);
			modalInstance.show();

			const modalBody = modal.querySelector('.modal-body');
			modalBody.textContent = "Are you sure you want to deactivate this bank account?";

			modal.querySelector('.modal-footer')
				.addEventListener('click', function (event) {
					if (event.target.classList.contains('btn-danger')) {
						window.location.href = url;
					}
				});
		});
	});
</script>
